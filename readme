# Processing-in-Interconnect-Codes

This repository contains implementations of **Ï€Â² (Processing-in-Interconnect)** neural network layers and architectures, along with training/evaluation scripts on MNIST, Fashion-MNIST, and CIFAR datasets. The project leverages [Lightning Fabric](https://lightning.ai/docs/fabric/stable/) for distributed training, mixed precision, and scaling across GPUs.

---
## ðŸ”§ Environment Setup

We recommend using **conda**:

'''
# Create a fresh environment
conda create -n fabric2 python==3.10 -y
conda activate fabric2
'''

# Install dependencies
pip install torch torchvision lightning fabric deepspeed

# Clone this repository
git clone https://github.com/NeuRonICS-Lab/Processing-in-Interconnect-Codes.git
cd Processing-in-Interconnect-Codes

Processing-in-Interconnect-Codes/
â”‚
â”œâ”€â”€ PI2_Layers/           # TEMP / Ï€Â² custom PyTorch layers (Conv, FC, MLP blocks)
â”œâ”€â”€ network_arch/         # Network definitions (ResNet9, LeNet, TEMP-MLP, etc.)
â”œâ”€â”€ MNIST_EXP/            # Training/eval scripts for MNIST experiments
â”œâ”€â”€ FMNIST_EXP/           # Training/eval scripts for Fashion-MNIST experiments
â”œâ”€â”€ CIFAR10_EXP/            # Training/eval scripts for MNIST experiments
â”œâ”€â”€ CIFAR100_EXP/           # Training/eval scripts for Fashion-MNIST experiment
â”œâ”€â”€ Trained_models/       # Pretrained checkpoints (saved after training)
â””â”€â”€ README.md             # (this file)


To reproduce the MNIST experiment results run
python MNIST_EXP/fabric_PI2_1.py --current_dir /path/to/Processing-in-Interconnect-Codes

To reproduce the FMNIST experiment results run
python FMNIST_EXP/pi_2_train.py --current_dir /path/to/Processing-in-Interconnect-Codes

To reproduce the CIFAR100 experiment results run
python CIFAR100_EXP/pi_2_train.py --current_dir /path/to/Processing-in-Interconnect-Codes

â€‹To reproduce the CIFAR10 experiment results run
python CIFAR10_EXP/pi_2_train.py --current_dir /path/to/Processing-in-Interconnect-Codes
